buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "commdel.com.dcontrols"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        useLibrary 'org.apache.http.legacy'
    }
    flavorDimensions "default"
    productFlavors {
        uat {
            applicationId "commdel.com.dcontrols"
            versionName "5.0.01"
            versionCode 1
            resValue "string", "google_maps_key", "AIzaSyDzcLrYbIov6zn5Ujbch0QXJGP61s3lC1Y"
            ext {
                server = [debug: "http://dev-m-ffa.mobileforce.in/", release: "http://dev-m-ffa.mobileforce.in/"]
            }
            buildConfigField "Boolean", "PROD", 'false'
            manifestPlaceholders = [
                    appIcon: "@mipmap/app_icon", appLabel: "@string/app_name_uat"
            ]
        }



        applicationVariants.all { variant ->
            def flavor = variant.productFlavors[0]
            println "Setting up server URL ${flavor.ext.server[variant.buildType.name]} for variant [${variant.name}]"
            variant.buildConfigField "String", "SERVER_URL", "\"${flavor.ext.server[variant.buildType.name]}\""
        }
    }
    lintOptions {
        disable "ResourceType"
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false

    }


    buildTypes {
        debug {
            debuggable true
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }

    dexOptions {
        // incremental true
        javaMaxHeapSize "4g"
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.google.android.gms:play-services-maps:15.0.1'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:design:28.0.0-alpha1'
    implementation 'com.android.support:cardview-v7:+'
    implementation 'com.squareup.retrofit2:retrofit:2.1.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.3.1'
    implementation 'com.android.support:multidex:1.0.1'
    // location play services
    implementation 'com.google.android.gms:play-services-location:15.0.1'
    implementation 'com.google.android.gms:play-services-places:15.0.1'

    // dexter runtime permissions
    implementation 'com.karumi:dexter:4.2.0'
    implementation 'com.williamww:silky-signature:0.1.0'
    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'android.arch.lifecycle:livedata:1.1.1'
    implementation 'android.arch.lifecycle:viewmodel:1.1.1'
    implementation 'android.arch.lifecycle:extensions:1.1.1'

    implementation('com.crashlytics.sdk.android:crashlytics:2.9.5@aar') {
        transitive = true;
    }
    compile project(path: ':dynamiccontrolslibrary')


}
